version: '3'

volumes:
  postgres_data:
    driver: local

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf
    - /var/run/docker.sock:/tmp/docker.sock:ro
    - /path/to/vhost.d:/etc/nginx/vhost.d:ro
    ports:
      - 80:80

  jbpm:
      image: jboss/jbpm-server-full:latest
      container_name: jbpm
#      network_mode: host
      environment:
        JBPM_DB_DRIVER: postgres
        JBPM_DB_HOST: postgres
        JBPM_DB_PORT: 5432
      depends_on:
          - "postgres"
#Скорее всего нужно поиграться с портами тут, чтобы всё заработало
#      expose:
#       - 5432
      ports:
      - 8123:8080
      - 9123:9990
#      environment:
#         b 0.0.0.0
#         bmanagement 0.0.0.0
#         Djboss.management.http.port=8124
  postgres:
      image: postgres
      container_name: postgres
      volumes:
         - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: jbpm
        POSTGRES_USER: jbpm
        POSTGRES_PASSWORD: jbpm
#Порт специально оставляю открытым, чтобы можно было подключиться к БД и увидеть, что JBPM создал нужную БД и установил подключение.
      ports:
      - 5432:5432
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - type: bind
        source: ./prometheus.yml
        target: /etc/prometheus/prometheus.yml
    command:
      - '--web.external-url=http://localhost/prometheus/'
      - '--web.route-prefix=/'
      - '--config.file=/etc/prometheus/prometheus.yml'
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
  grafana:
      image: grafana/grafana
      container_name: grafana
      volumes:
        - ./grafana:/etc/grafana/provisioning/
      environment:
        - GF_SERVER_ROOT_URL=https://localhost/grafana
